{"version":3,"file":"popup.js","mappings":";;;;;;;;;;;AAAA;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACN2B;;AAE3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA,OAAO;;AAEP;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH,CAAC","sources":["webpack://sip-magic/./src/popup.scss","webpack://sip-magic/webpack/bootstrap","webpack://sip-magic/webpack/runtime/make namespace object","webpack://sip-magic/./src/popup.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import '../src/popup.scss';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  document\n    .getElementById('main-form__beautify')\n    .addEventListener('click', () => {\n      const orderedObject = {};\n\n      const iframe = document.getElementById('sandbox');\n      window.addEventListener('message', (event) => {\n        console.log(event.data);\n        let arrOfLines = event.data.split('\\r\\n').filter((e) => e.length > 0);\n        arrOfLines.map((e) => {\n          let key = e.substring(0, e.indexOf(':'))\n            ? e.substring(0, e.indexOf(':'))\n            : '<no-key>';\n          orderedObject[key] = e.substring(e.indexOf(':') + 1, e.length);\n        });\n        if (Object.keys(orderedObject).length > 1) {\n          const existingChild = document.getElementsByClassName('text-box')[0];\n          if (existingChild)\n            document.getElementById('render').removeChild(existingChild);\n\n          const contentDiv = document.getElementById('render');\n          const wholeTextDiv = document.createElement('div');\n          wholeTextDiv.classList.add('text-box');\n          contentDiv.style.display = 'block';\n\n          Object.keys(orderedObject).forEach((e) => {\n            const newFieldDiv = document.createElement('div');\n            newFieldDiv.classList.add('newFieldDiv');\n            const keySpan = document.createElement('span');\n            keySpan.classList.add('keySpan');\n\n            const valueSpan = document.createElement('span');\n            valueSpan.classList.add('valueSpan');\n\n            keySpan.innerText = e + ':';\n            valueSpan.innerText = orderedObject[e];\n\n            newFieldDiv.appendChild(keySpan);\n            newFieldDiv.appendChild(valueSpan);\n            wholeTextDiv.appendChild(newFieldDiv);\n          });\n\n          contentDiv.appendChild(wholeTextDiv);\n        }\n      });\n\n      const sipInvite = document.getElementById('main-form__input').value;\n      iframe.contentWindow.postMessage(\"'\" + sipInvite + \"'\", '*');\n    });\n\n  document.getElementById('copyToClipboard').addEventListener('click', () => {\n    document.getElementById('copiedSpan').classList.add('clipboardFade');\n    setTimeout(() => {\n      document.getElementById('copiedSpan').classList.remove('clipboardFade');\n    }, 1000);\n\n    let textToCopy = '';\n    document.querySelectorAll('.newFieldDiv').forEach((e) => {\n      textToCopy += e.textContent + '\\n';\n    });\n    let result = navigator.clipboard.writeText(textToCopy);\n  });\n});\n"],"names":[],"sourceRoot":""}